{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../node_modules/svelte-spa-router/Router.svelte","../node_modules/regexparam/dist/regexparam.mjs","../src/components/HostSetter.svelte","../src/components/Navbar.svelte","../src/components/Result.svelte","../src/components/Pager.svelte","../src/components/Results.svelte","../src/components/Spinner.svelte","../src/components/Fetcher.svelte","../src/routes/Password.svelte","../src/routes/Username.svelte","../src/routes/Domain.svelte","../src/components/HIBP.svelte","../src/routes/Email.svelte","../src/routes/NotFound.svelte","../src/routes.js","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(component, store, callback) {\n    const unsub = store.subscribe(callback);\n    component.$$.on_destroy.push(unsub.unsubscribe\n        ? () => unsub.unsubscribe()\n        : unsub);\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = cb => requestAnimationFrame(cb);\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n * @param store readable\n */\nfunction get_store_value(store) {\n    let value;\n    const unsubscribe = store.subscribe(_ => value = _);\n    if (unsubscribe.unsubscribe)\n        unsubscribe.unsubscribe();\n    else\n        unsubscribe();\n    return value;\n}\nfunction add_attribute(name, value) {\n    if (!value)\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(value) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, detach_after, detach_before, detach_between, dirty_components, each, element, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\nimport {readable, derived} from 'svelte/store'\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    getLocation(),\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/`)\n */\nexport function push(location) {\n    if (!location || location.length < 1 || location.charAt(0) != '/') {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    setTimeout(() => {\n        window.location.hash = '#' + location\n    }, 0)\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n */\nexport function pop() {\n    // Execute this code when the current call stack is complete\n    setTimeout(() => {\n        window.history.back()\n    }, 0)\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/`)\n */\nexport function replace(location) {\n    if (!location || location.length < 1 || location.charAt(0) != '/') {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    setTimeout(() => {\n        history.replaceState(undefined, undefined, '#' + location)\n\n        // The method above doesn't trigger the hashchange event, so let's do that manually\n        window.dispatchEvent(new Event('hashchange'))\n    }, 0)\n}\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n */\nexport function link(node) {\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    // Destination must start with '/'\n    const href = node.getAttribute('href')\n    if (!href || href.length < 1 || href.charAt(0) != '/') {\n        throw Error('Invalid value for \"href\" attribute')\n    }\n\n    // onclick event handler\n    node.addEventListener('click', (event) => {\n        // Disable normal click event\n        event.preventDefault()\n\n        // Push link or link children click\n        let href\n        let target = event.target\n        while ((href = target.getAttribute('href')) === null) {\n            target = target.parentElement\n            if (target === null) {\n                throw Error('Could not find corresponding href value')\n            }\n        }\n        push(href)\n\n        return false\n    })\n}\n</script>\n\n<svelte:component this=\"{component}\" params=\"{componentParams}\" />\n\n<script>\nimport regexparam from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent} component - Svelte component for the route\n     */\n    constructor(path, component) {\n        // Path must start with '/' or '*'\n        if (!path || path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*')) {\n            throw Error('Invalid value for \"path\" argument')\n        }\n\n        const {pattern, keys} = regexparam(path)\n\n        this.path = path\n        this.component = component\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            out[this._keys[i]] = matches[++i] || null\n        }\n        return out\n    }\n}\n\n// Set up all routes\nconst routesList = Object.keys(routes).map((path) => {\n    return new RouteItem(path, routes[path])\n})\n\n// Props for the component to render\nlet component = null\nlet componentParams = {}\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n$: {\n    // Find a route matching the location\n    component = null\n    let i = 0\n    while (!component && i < routesList.length) {\n        const match = routesList[i].match($loc.location)\n        if (match) {\n            component = routesList[i].component\n            componentParams = match\n        }\n        i++\n    }\n}\n</script>\n","export default function (str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n","<script>\n\timport { writable } from \"svelte/store\";\n\tconst host = writable(localStorage.getItem(\"host\") || \"http://127.0.0.1:4567\")\n\thost.subscribe(val => localStorage.setItem(\"host\", val));\n</script>\n\n<style>\n.host-input {\n\tmargin: 0 1em 0 1em;\n}\n\n.z-bottom {\n\tz-index: -99;\n}\n</style>\n\n<div class=\"input-field host-input\">\n\t<label class=\"z-bottom\" for=\"Host\">Host</label>\n\t<input bind:value={$host} placeholder=\"API Host\" type=\"text\" class=\"validate\">\n</div>\n\n\n","<script>\n\timport { link, push, pop } from \"svelte-spa-router\"\n\timport HostSetter from \"./HostSetter.svelte\"\n\n\tfunction handleSearch(e) {\n\t\tif (e.keyCode == 13) {\n\t\t\tlet type, rest\n\t\t\tlet query = e.target.value\n\n\t\t\tif (!query) {\n\t\t\t\tpush(`/rtfm`)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t;[type] = query.split(\":\")\n\t\t\trest = query.slice(2)\n\n\t\t\tswitch (type) {\n\t\t\t\tcase \"u\":\n\t\t\t\t\tpush(`/username/${rest}`)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"p\":\n\t\t\t\t\tpush(`/password/${rest}`)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"d\":\n\t\t\t\t\tpush(`/domain/${rest}`)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"e\":\n\t\t\t\t\tpush(`/email/${rest}`)\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tpush(`/rtfm`)\n\t\t\t}\n\t\t}\n\t}\n\n\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\tlet options = {\n\t\t\t\"alignment\": \"right\", \n\t\t\t\"constrainWidth\": false,\n\t\t\t\"coverTrigger\": false,\n\t\t\t\"hove\": true,\n\t\t\t\"closeOnClick\": false\n\t\t}\n\t\tvar elems = document.querySelectorAll('.dropdown-trigger');\n\t\tvar instances = M.Dropdown.init(elems, options);\n\t});\n\n</script>\n\n<style>\n\t.input {\n\t\tcolor: white;\n\t}\n\n\ta i.settings {\n\t\tmargin-top: -0.55em;\n\t}\n</style>\n\n<nav class=\"blue-grey darken-1 z-depth-3\">\n\n\t<div class=\"container\">\n\n\t\t<div class=\"row nav-wrapper\">\n\t\t\t<a class=\"col s3\" href=\"/\" use:link>\n\t\t\t\t<div class=\"brand-logo\">PassDB Search</div>\n\t\t\t</a>\n\n\t\t\t<ul id=\"nav-mobile\" class=\"col s3 offset-s8\">\n\t\t\t\t<li>\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"white-text\"\n\t\t\t\t\t\ton:keydown=\"{handleSearch}\"\n\t\t\t\t\t/>\n\t\t\t\t</li>\n\t\t\t</ul>\n\n\t\t\t<span class=\"col s1\">\n\t\t\t\t<!-- Dropdown Trigger -->\n\t\t\t\t<a class=\"dropdown-trigger btn\" href=\"#\" data-target=\"api-host\">\n\t\t\t\t\t<i class=\"material-icons settings\">settings</i>\n\t\t\t\t</a>\n\n\t\t\t\t<!-- Dropdown Structure -->\n\t\t\t\t<div id=\"api-host\" class=\"dropdown-content\">\n\t\t\t\t\t<HostSetter/>\n\t\t\t\t</div>\n\t\t\t</span>\n\t\t</div>\n\t</div>\n</nav>\n","<script>\n\texport let result\n\timport { location, link } from \"svelte-spa-router\"\n</script>\n\n<style>\n.clip {\n\tmargin-bottom: 0px;\n}\n\n.row .clip-left {\n\tmargin-left: 0px;\n}\n\n</style>\n\n<tr>\n\t<td class=\"valign-wrapper row clip\">\n\n\t\t{ #if ! $location.match(\"/email/\")}\n\t\t\t<a class=\"clip-left\" href=\"/email/{result.username}@{result.domain}\" use:link>\n\t\t\t\t<i class=\"col s1 material-icons\">info</i>\n\t\t\t</a>\n\t\t{:else}\n\t\t\t<a class=\"clip-left\" href=\"/email/{result.username}@{result.domain}\" use:link>\n\t\t\t</a>\n\t\t{ /if }\n\n\t\t<a class =\"col s10 clip-left\" href=\"/username/{result.username}\" use:link> {result.username} </a>\n\t</td>\n\t<td>\n\t\t<a href=\"/domain/{result.domain}\" use:link> {result.domain} </a>\n\t</td>\n\t<td>\n\t\t<a href=\"/password/{result.password}\" use:link> {result.password} </a>\n\t</td>\n</tr>\n","<script>\n\texport let params\n\texport let resultSize\n\timport { link, location } from \"svelte-spa-router\"\n\n\tlet strParams = (n) => `per_page=${n || params.per_page}`\n\tlet pageParams = (n) => `page=${n || params.page}`\n\tlet isLastPage = resultSize < params.per_page\n</script>\n\n<style>\n.btn-group {\n\tpadding: 14px;\n}\n</style>\n\n<div class=\"row\">\n\t<div class=\"col s3 offset-s5\">\n\t\t<ul class=\"pagination\">\n\n\t\t\t{#if params.page === 1 || params.page == undefined}\n\t\t\t<li class=\"disabled\">\n\t\t\t\t<a href=\"null\" onclick=\"return false\"><i class=\"material-icons\">chevron_left </i></a>\n\t\t\t</li>\n\n\t\t\t{:else}\n\t\t\t<li class=\"waves-effect\">\n\t\t\t\t<a use:link href=\"{$location}?page={params.page - 1}&amp;{strParams()}\" >\n\t\t\t\t\t<i class=\"material-icons\">chevron_left</i>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t\t{/if}\n\n\t\t\t<li class=\"active\">\n\t\t\t\t<a href=\"null\" onclick=\"return false\"> {params.page} </a>\n\t\t\t</li>\n\n\t\t\t{#if isLastPage || params.page === undefined}\n\t\t\t<li class=\"disabled\">\n\t\t\t\t<a href=\"null\" onclick=\"return false\"><i class=\"material-icons\">chevron_right </i></a>\n\t\t\t</li>\n\t\t\t{:else}\n\t\t\t<li class=\"waves-effect\">\n\t\t\t\t<a use:link href=\"{$location}?page={params.page + 1}&amp;{strParams()}\">\n\t\t\t\t\t<i class=\"material-icons\">chevron_right </i>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t\t{/if}\n\t\t</ul>\n\t</div>\n\n\t<div class=\"btn-group col s4 offset-12 right-align\" aria-label=\"Per-Page Selecter\">\n\t\t<a use:link class=\"btn btn-small\" href=\"{$location}?{pageParams()}&amp;{strParams(20)}\">20</a>\n\t\t<a use:link class=\"btn btn-small\" href=\"{$location}?{pageParams()}&amp;{strParams(50)}\">50</a>\n\t\t<a use:link class=\"btn btn-small\" href=\"{$location}?{pageParams()}&amp;{strParams(100)}\">100</a>\n\t</div>\n\n</div>\n","<script>\n\texport let results\n\n\timport { location, querystring } from \"svelte-spa-router\"\n\timport Result from \"./Result.svelte\"\n\timport Pager from \"./Pager.svelte\"\n\n\tlet qParams = $querystring.split(\"&\")\n\tlet params = qParams.reduce((memo, i) => {\n\t\tlet [key, val] = i.split(\"=\")\n\t\tmemo[key] = val\n\t\treturn memo\n\t}, {})\n\n\tif (params.page) {\n\t\tparams.page = parseInt(params.page)\n\t} else {\n\t\tparams.page = 1\n\t}\n\n\tif (params.per_page) {\n\t\tparams.per_page = parseInt(params.per_page)\n\t} else {\n\t\tparams.per_page = 50\n\t}\n\n\t$: page = parseInt(params.page)\n</script>\n\n<style></style>\n\n{ #if !$location.match(\"/email/\")}\n\t<Pager {params} resultSize={results.length} />\n{ /if }\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Usernames</th>\n\t\t\t<th>Domains</th>\n\t\t\t<th>Passwords</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t{#each results as result}\n\t\t<Result {result} />\n\t\t{/each}\n\t</tbody>\n</table>\n","<script>\n\texport let type\n</script>\n\n{#if type === \"circle\"}\n\t<div class=\"center-align\">\n\t\t<div class=\"center-align preloader-wrapper big active\">\n\t\t\t<div class=\"spinner-layer spinner-blue-only\">\n\t\t\t\t<div class=\"circle-clipper left\">\n\t\t\t\t\t<div class=\"circle\"></div>\n\t\t\t\t</div><div class=\"gap-patch\">\n\t\t\t\t\t<div class=\"circle\"></div>\n\t\t\t\t</div><div class=\"circle-clipper right\">\n\t\t\t\t\t<div class=\"circle\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n{:else}\n\t<div class=\"progress\">\n\t\t<div class=\"indeterminate\"></div>\n\t</div>\n{/if}\n","<script>\n\texport let endpoint\n\n\timport { location } from \"svelte-spa-router\"\n\timport Results from \"./Results.svelte\"\n\timport Spinner from \"./Spinner.svelte\"\n\n\tlet apiServer = localStorage.getItem(\"host\")\n\n\tasync function apiGet(q) {\n\t\tconst res = await fetch(`${apiServer}${q}`)\n\t\tconst text = await res.json()\n\t\treturn text\n\t}\n\n</script>\n\n<div class=\"row\">\n\t<div class=\"col s12 center-align\">\n\t\t<h4 class>results for {$location.split(\"/\")[2]}</h4>\n\t</div>\n</div>\n\n{#await apiGet(endpoint)}\n<Spinner type=\"line\" />\n{:then results}\n<Results {results} />\n{:catch error}\n<p style=\"color: red\">{error.message}</p>\n{/await}\n","<script>\n\texport let params = {}\n\n\timport { querystring } from \"svelte-spa-router\"\n\timport Fetcher from \"../components/Fetcher.svelte\"\n\n\t$: endpoint = `/passwords/${params.password}?${$querystring}`\n</script>\n\n<div class=\"container\">\n\t<Fetcher {endpoint} />\n</div>\n","<script>\n\texport let params = {}\n\n\timport { querystring } from \"svelte-spa-router\"\n\timport Fetcher from \"../components/Fetcher.svelte\"\n\n\t$: endpoint = `/usernames/${params.name}?${$querystring}`\n</script>\n\n<div class=\"container\">\n\t<Fetcher {endpoint} />\n</div>\n","<script>\n\texport let params = {}\n\n\timport { querystring } from \"svelte-spa-router\"\n\timport Fetcher from \"../components/Fetcher.svelte\"\n\n\t$: endpoint = `/domains/${params.domain}?${$querystring}`\n</script>\n\n<div class=\"container\">\n\t<Fetcher {endpoint} />\n</div>\n","<script>\n\texport let email\n\n\timport Spinner from \"./Spinner.svelte\"\n\n\tlet apiServer = localStorage.getItem(\"host\")\n\n\tasync function apiGet(q) {\n\t\tconst res = await fetch(`${apiServer}${q}`)\n\t\tconst text = await res.json()\n\t\treturn text\n\t}\n</script>\n\n<style>\n.header {\n\tfont-weight: 800;\n\tpadding: 0.5em;\n}\n\n.desc {\n\tfont-size: 1.2em\n}\n\nimg {\n\twidth: 100%;\n\theight: 100%;\n\toverflow: hidden;\n\tobject-fit: cover;\n\t-webkit-filter: drop-shadow(5px 5px 5px #ccc);\n\tfilter: drop-shadow(5px 5px 5px #ccc);\n}\n\nli .row {\n\tmargin: 0px;\n}\n</style>\n\n{#await apiGet(`/breaches/${email}`)}\n<Spinner type=\"circle\" />\n\n{:then results}\n<div class=\"row\">\n\t<div class=\"col s12 center-align\">\n\t\t<h4 class>breach data</h4>\n\t</div>\n</div>\n\n\n\n<ul class=\"collapsible\">\n\t<li>\n\t\t<div class=\"row center-align header\">\n\t\t\t<div class=\"col s3 left-align\">Name</div>\n\t\t\t<div class=\"col s3\">Domain</div>\n\t\t\t<div class=\"col s3\">Date</div>\n\t\t\t<div class=\"col s3\">Count</div>\n\t\t</div>\n\t</li>\n\n\t<hr/>\n\n\t{#each results as breach}\n\t<li>\n\t\t<div class=\"collapsible-header row center-align\">\n\t\t\t<i class=\"col s1 material-icons\">info</i>\n\t\t\t<div class=\"col s3 left-align\"> {breach.Title} </div>\n\t\t\t<div class=\"col s3\"> {breach.Domain} </div>\n\t\t\t<div class=\"col s3\"> {breach.Date} </div>\n\t\t\t<div class=\"col s3\"> {Number(breach.Count).toLocaleString() } </div>\n\t\t</div>\n\n\t\t<div class=\"collapsible-body row\">\n\t\t\t<div class=\"col s3\" >\n\t\t\t\t<img alt={breach.Title} src={breach.LogoPath} />\n\t\t\t</div>\n\t\t\t\t<div class=\"col s9 desc\"> {@html breach.Description} </div>\n\t\t</div>\n\t</li>\n\t{/each}\n</ul>\n\n\n<script>\n\tM.AutoInit()\n</script>\n\n{:catch error}\n<p style=\"color: red\">{error.message}</p>\n{/await}\n","<script>\n\texport let params = {}\n\n\timport { querystring } from \"svelte-spa-router\"\n\timport Fetcher from \"../components/Fetcher.svelte\"\n\timport HIBP from \"../components/HIBP.svelte\"\n\n\t$: email = params.email\n\t$: endpoint = `/emails/${email}?${$querystring}`\n</script>\n\n<div class=\"container\">\n\t<Fetcher {endpoint} />\n\t<HIBP {email} />\n</div>\n","<script>\n\texport let params\n\n\timport Home from \"./Home.svelte\"\n</script>\n\n<style>\n\t#error {\n\t\tfont-size: 1.1em;\n\t\tpadding: -10px;\n\t\theight: 1%;\n\t}\n</style>\n\n<div class=\"container\">\n\t<div class=\"row\">\n\t\t<div class=\"card-panel red lighten-2 center-align\" id=\"error\">\n\t\t\tUnable to find: {params.wild}\n\t\t</div>\n\t</div>\n</div>\n\n<Home />\n","import Home from \"./routes/Home.svelte\"\nimport Password from \"./routes/Password.svelte\"\nimport Username from \"./routes/Username.svelte\"\nimport Domain from \"./routes/Domain.svelte\"\nimport Email from \"./routes/Email.svelte\"\nimport NotFound from \"./routes/NotFound.svelte\"\n\nconst routes = {\n\t\"/\": Home,\n\t\"/password/:password\": Password,\n\t\"/username/:name\": Username,\n\t\"/domain/:domain\": Domain,\n\t\"/email/:email\": Email,\n\t\"*\": NotFound,\n}\n\nexport default routes\n","<script>\n\timport Router from \"svelte-spa-router\"\n\timport Navbar from \"./components/Navbar.svelte\"\n\timport routes from \"./routes.js\"\n</script>\n\n<body>\n\t<Navbar />\n\t<Router {routes} />\n</body>\n","import App from \"./App.svelte\"\n\nconst app = new App({\n\ttarget: document.body,\n})\n\nexport default app\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","component","store","callback","unsub","$$","on_destroy","push","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","set_data","set_style","key","style","setProperty","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","shift","update","pop","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","handle_promise","promise","info","token","type","index","resolved","[object Object]","child_ctx","current","blocks","m","mount","then","error","catch","pending","mount_component","on_mount","new_on_destroy","map","filter","destroy_component","make_dirty","init","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","context","Map","callbacks","ready","hydrate","l","Array","from","childNodes","intro","SvelteComponent","this","$destroy","indexOf","splice","subscriber_queue","readable","start","writable","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","cleanup","sync","result","unsubscribers","componentParams","getLocation","hashPosition","window","location","href","substr","qsPosition","querystring","loc","$loc","charAt","Error","setTimeout","hash","link","tagName","toLowerCase","getAttribute","preventDefault","parentElement","routes","RouteItem","path","pattern","keys","str","loose","RegExp","tmp","ext","arr","split","substring","regexparam","_pattern","_keys","matches","exec","out","routesList","match","$host","host","localStorage","getItem","val","setItem","handleSearch","e","keyCode","rest","query","slice","elems","querySelectorAll","M","Dropdown","alignment","constrainWidth","coverTrigger","hove","closeOnClick","username","domain","password","$location","params","page","strParams","undefined","isLastPage","pageParams","resultSize","per_page","n","results","$querystring","reduce","memo","parseInt","message","apiGet","endpoint","apiServer","async","q","res","fetch","json","breach","Title","Domain","Date","Number","Count","toLocaleString","Description","LogoPath","email","wild","/","Home","/password/:password","/username/:name","/domain/:domain","/email/:email","*","body"],"mappings":"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"}